#ifndef CONCATEN_ERROR_H
#define CONCATEN_ERROR_H

typedef unsigned int ERROR_VAL;
#define EFMT "%u"
typedef struct ERROR {
    const char *const file;
    const size_t line;
    const ERROR_VAL  errcode;
    struct ERROR *cause;
} ERROR;

static const ERROR NO_ERROR = { NULL, 0, 0, NULL };
#define ERROR_SETUP ERROR prev_err;
#define FAILED(err) (prev_err = err).errcode
#define ERROR(_code, _from) (ERROR) { \
    .cause = _from, .errcode = _code, \
    .file = __FILE__, .line = __LINE__, \
}

/*-------------------*
 | Core class errors |
 +-------------------*/

// General errors (0-999)
static const ERROR_VAL USER_DEFINED_ERROR_TYPE = 1;

static const ERROR_VAL CB_CTOR_MALLOC_FAIL = 101;
static const ERROR_VAL CB_COPY_MALLOC_FAIL = 102;
static const ERROR_VAL CB_APND_EXPAND_FAIL = 103;
static const ERROR_VAL CB_INST_BAD_IDX_FAIL = 111;
static const ERROR_VAL CB_INST_EXPAND_FAIL = 112;
static const ERROR_VAL CB_PREP_EXPAND_FAIL = 122;
static const ERROR_VAL CB_RMV_BAD_IDX_FAIL = 131;
static const ERROR_VAL CB_GET_BAD_IDX_FAIL = 141;
static const ERROR_VAL CB_SET_BAD_IDX_FAIL = 151;
static const ERROR_VAL DST_PUSH_MALLOC_FAIL = 201;
static const ERROR_VAL DST_POP_EMPTY_FAIL   = 202;
static const ERROR_VAL TST_PUSH_MALLOC_FAIL = 301;
static const ERROR_VAL TST_PUSH_SAVE_FAIL = 302;
static const ERROR_VAL TST_POP_EMPTY_FAIL = 303;
static const ERROR_VAL TST_POP_SAVE_FAIL = 304;
static const ERROR_VAL TST_PEEK_EMPTY_FAIL = 305;
static const ERROR_VAL TST_PUSH_LEVEL_MALLOC_FAIL = 306;
static const ERROR_VAL TST_PUSH_LEVEL_SAVE_FAIL = 307;
static const ERROR_VAL TST_POP_LEVEL_EMPTY_FAIL = 308;
static const ERROR_VAL TST_POP_LEVEL_SAVE_FAIL = 309;
static const ERROR_VAL TST_RSTR_NOT_SAVING_FAIL = 310;
static const ERROR_VAL TST_RSTR_POP_FAIL = 311;
static const ERROR_VAL TST_RSTR_PUSH_FAIL = 312;
static const ERROR_VAL TST_RSTR_POP_LEVEL_FAIL = 313;
static const ERROR_VAL TST_RSTR_PUSH_LEVEL_FAIL = 314;
static const ERROR_VAL CTNO_CTOR_MALLOC_FAIL = 501;
static const ERROR_VAL CTNO_CTOR_PM_COPY_FAIL = 502;
static const ERROR_VAL CTNO_COPY_PROPS_FAIL = 503;
static const ERROR_VAL CTNO_COPY_DATA_FAIL = 504;
static const ERROR_VAL CTNO_COPY_CLAIM_FAIL = 505;
static const ERROR_VAL CTNO_GET_NO_KEY_FAIL = 506;
static const ERROR_VAL CTNO_GET_LITERAL_FAIL = 507;
static const ERROR_VAL CTNO_GET_PM_GET_FAIL = 508;
static const ERROR_VAL CTNO_SET_LITERAL_FAIL = 509;
static const ERROR_VAL CTNO_SET_CYCLE_FAIL = 510;
static const ERROR_VAL CTNO_SET_ADD_FAIL = 511;
static const ERROR_VAL CTNO_SET_CLAIM_FAIL = 512;
static const ERROR_VAL CTNO_SET_PM_GET_FAIL = 513;
static const ERROR_VAL CTNO_CLAIM_MAX_REFCOUNT = 514;
static const ERROR_VAL PM_CTOR_MALLOC_FAIL = 551;
static const ERROR_VAL PM_COPY_CREATE_FAIL = 552;
static const ERROR_VAL PM_COPY_MALLOC_FAIL = 553;
static const ERROR_VAL PM_NESTED_REHASH_FAIL = 554;
static const ERROR_VAL PM_RH_CREATE_FAIL = 555;
static const ERROR_VAL PM_RH_BAD_SIZE_FAIL = 556;
static const ERROR_VAL PM_SET_REHASH_FAIL = 557;
static const ERROR_VAL PM_SET_MALLOC_FAIL = 558;
static const ERROR_VAL PM_GET_NO_KEY_FAIL = 559;
static const ERROR_VAL PM_RMV_NO_KEY_FAIL = 560;
static const ERROR_VAL MM_CTOR_MALLOC_FAIL = 571;
static const ERROR_VAL MM_NESTED_REHASH_FAIL = 572;
static const ERROR_VAL MM_RH_CREATE_FAIL = 573;
static const ERROR_VAL MM_RH_BAD_SIZE_FAIL = 574;
static const ERROR_VAL MM_SET_REHASH_FAIL = 575;
static const ERROR_VAL MM_GET_NO_KEY_FAIL = 576;
static const ERROR_VAL MM_RMV_NO_KEY_FAIL = 577;
static const ERROR_VAL SB_CTOR_BAD_CAP_FAIL = 711;
static const ERROR_VAL SB_CTOR_MALLOC_FAIL = 712;
static const ERROR_VAL SB_APND_MULT_OVERFLOW_FAIL = 721;
static const ERROR_VAL SB_APND_MALLOC_FAIL = 722;
static const ERROR_VAL SB_TS_REALLOC_FAIL = 731;
static const ERROR_VAL TKNR_CTOR_STR_MALLOC_FAIL = 801;
static const ERROR_VAL TKNR_CTOR_STR_BAD_STRLEN_FAIL = 802;
static const ERROR_VAL TKNR_CTOR_STR_NULL_ARG_FAIL = 803;
static const ERROR_VAL TKNR_CTOR_FILE_MALLOC_FAIL = 804;
static const ERROR_VAL TKNR_CTOR_FILE_BAD_STRLEN_FAIL = 805;
static const ERROR_VAL TKNR_CTOR_FILE_NULL_ARG_FAIL = 806;
static const ERROR_VAL TKNR_CTOR_FILE_FOPEN_FAIL = 807;
static const ERROR_VAL TKNR_FILE_READ_FAIL = 808;
static const ERROR_VAL TKNR_FILE_READ_EOF_FAIL = 809;
static const ERROR_VAL TKNR_STRING_READ_EOS_FAIL = 810;
static const ERROR_VAL TKNR_NT_MALLOC_FAIL = 811;
static const ERROR_VAL TKNR_NT_NEW_SB_FAIL = 812;
static const ERROR_VAL TKNR_NT_SB_FREE_COPY_FAIL = 813;
static const ERROR_VAL TKNR_NT_INPUT_END_FAIL = 814;
static const ERROR_VAL TKNR_SYN_NO_SEPARATION_FAIL = 815;
static const ERROR_VAL TKNR_SYN_UNEXPECTED_END_FAIL = 816;
static const ERROR_VAL TKNR_SYN_STR_MULTILINE_FAIL = 817;
static const ERROR_VAL TKNR_SYN_NUM_ILLEGAL_DIGIT_FAIL = 818;
static const ERROR_VAL TKNR_SYN_RGX_BAD_FLAG_FAIL = 819;
static const ERROR_VAL TKNR_TKN_COPY_MALLOC_RAW_FAIL = 820;
static const ERROR_VAL TKNR_TKN_COPY_MALLOC_ORG_FAIL = 821;
static const ERROR_VAL TTO_WORDS_VALUELESS_FAIL = 900;
static const ERROR_VAL TTO_UNKNOWN_TYPE_FAIL = 901;
static const ERROR_VAL TTO_NOT_IMPLEMENTED_FAIL = 902;
static const ERROR_VAL TTO_STRING_ESCAPE_FAIL = 903;
static const ERROR_VAL TTO_ESCAPE_END_FAIL = 904;
static const ERROR_VAL TTO_MALLOC_FAIL = 905;
static const ERROR_VAL TTO_ESCAPE_BAD_HEX_FAIL = 906;
static const ERROR_VAL TTO_OUT_OF_RANGE_FAIL = 907;
static const ERROR_VAL TTO_INVALID_BASE_FAIL = 908;
static const ERROR_VAL TTO_INVALID_DIGIT_FAIL = 909;
static const ERROR_VAL TTO_FLP_CONVERT_FAIL = 910;

#endif //CONCATEN_ERROR_H
